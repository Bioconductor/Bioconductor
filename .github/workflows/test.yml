name: R CMD check

on:
  workflow_dispatch:
    branches:
      - testing

env:
  RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"

jobs:
  build-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    container: ${{ matrix.config.cont }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-20.04,   r: 'devel', bioc: '3.13', cont: "bioconductor/bioconductor_docker:devel", rspm: env.RSPM }
          - { os: ubuntu-20.04,   r: 'release', bioc: '3.12', cont: "bioconductor/bioconductor_docker:RELEASE_3_12", rspm: env.RSPM }
          - { os: macOS-latest,   r: 'devel', bioc: '3.13', rspm: env.RSPM }
          - { os: macOS-latest,   r: '4.0.4', bioc: '3.12', rspm: env.RSPM }
          - { os: macOS-latest,   r: '3.6.3', bioc: '3.11', rspm: env.RSPM }
          - { os: windows-latest, r: 'devel', bioc: '3.13', rspm: env.RSPM }
          - { os: windows-latest, r: '4.0.4', bioc: '3.12', rspm: env.RSPM }
          - { os: windows-latest, r: '3.6.3', bioc: '3.11', rspm: env.RSPM }
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      NOT_CRAN: false
      TZ: UTC
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      ## Set the R library to the directory matching the
      ## R packages cache step further below when running on Docker (Linux).
      - name: Set R Library home on Linux
        if: runner.os == 'Linux'
        run: |
          mkdir /__w/_temp/Library
          echo ".libPaths('/__w/_temp/Library')" > ~/.Rprofile

      - name: Checkout Repository
        uses: actions/checkout@v2

      ## R is already included in the Bioconductor docker images
      - name: Setup R from r-lib
        if: runner.os != 'Linux'
        uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      ## pandoc is already included in the Bioconductor docker images
      - name: Setup pandoc from r-lib
        if: runner.os != 'Linux'
        uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: "!contains(github.event.head_commit.message, '/nocache') && runner.os != 'Linux'"
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ env.cache-version }}-${{ runner.os }}-biocversion-devel-r-devel-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ env.cache-version }}-${{ runner.os }}-biocversion-devel-r-devel-

      - name: Cache R packages on Linux
        if: "!contains(github.event.head_commit.message, '/nocache') && runner.os == 'Linux' "
        uses: actions/cache@v2
        with:
          path: /home/runner/work/_temp/Library
          key: ${{ env.cache-version }}-${{ runner.os }}-biocversion-devel-r-devel-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ env.cache-version }}-${{ runner.os }}-biocversion-devel-r-devel-

      - name: Install Package Dependencies
        run: |
          options(repos = c(CRAN = ${{ env.RSPM }}))
          install.packages("devtools")
          devtools::install()
          BiocManager::install(version = "${{ matrix.config.bioc }}", ask = FALSE)
          BiocManager::repositories()
          remotes::install_deps(dependencies = TRUE, repos = BiocManager::repositories())
          BiocManager::install("rcmdcheck", ask = FALSE, update = TRUE)
        shell: Rscript {0}


      - name: Check Package
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: true
          _R_CHECK_CRAN_INCOMING_: true
        run: |
          rcmdcheck::rcmdcheck(
              args = c("--no-build-vignettes", "--no-manual", "--timings"),
              build_args = c("--no-manual", "--no-resave-data"),
              error_on = "error",
              check_dir = "check"
          )
        shell: Rscript {0}

